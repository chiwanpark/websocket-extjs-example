Ext.define("Ext.ux.data.proxy.WebSocket",{extend:"Ext.data.proxy.Proxy",alias:"proxy.websocket",requires:["Ext.ux.WebSocket"],callbacks:{},config:{storeId:"",api:{create:"create",read:"read",update:"update",destroy:"destroy"},url:"",protocol:null,websocket:null,autoReconnect:!0,autoReconnectInterval:5e3},constructor:function(a){var b=this;if(Ext.isEmpty(a))return Ext.Error.raise("A configuration is needed!"),!1;if(b.initConfig(a),b.mixins.observable.constructor.call(b,a),Ext.isEmpty(b.getStoreId()))return Ext.Error.raise("The storeId field is needed!"),!1;Ext.isEmpty(b.getWebsocket())&&b.setWebsocket(Ext.create("Ext.ux.WebSocket",{url:b.getUrl(),protocol:b.getProtocol(),communicationType:"event",autoReconnect:b.getAutoReconnect(),autoReconnectInterval:b.getAutoReconnectInterval()}));var c=b.getWebsocket();return"event"!==c.getCommunicationType()?(Ext.Error.raise("Ext.ux.WebSocket must use event communication type (set communicationType to event)!"),!1):(c.on(b.getApi().create,function(a,c){b.completeTask("create",b.getApi().create,c)}),c.on(b.getApi().read,function(a,c){b.completeTask("read",b.getApi().read,c)}),c.on(b.getApi().update,function(a,c){b.completeTask("update",b.getApi().update,c)}),c.on(b.getApi().destroy,function(a,c){b.completeTask("destroy",b.getApi().destroy,c)}),b)},create:function(a,b,c){this.runTask(this.getApi().create,a,b,c)},read:function(a,b,c){this.runTask(this.getApi().read,a,b,c)},update:function(a,b,c){this.runTask(this.getApi().update,a,b,c)},destroy:function(a,b,c){this.runTask(this.getApi().destroy,a,b,c)},runTask:function(a,b,c,d){var e=this,f={},g=e.getWebsocket(),h=0;if(d=d||e,e.callbacks[a]={operation:b,callback:c,scope:d},a===e.getApi().read){var i=b.sorters,j=b.groupers;if(i.length>0)for(f.sort=[],h=0;h<i.length;h++)f.sort.push({property:i[h].property,direction:i[h].direction});if(j.length>0)for(f.group=[],h=0;h<j.length;h++)f.group.push({property:j[h].property,direction:j[h].direction});f.page=b.page,f.limit=b.limit,f.start=b.start}else for(f=[],h=0;h<b.records.length;h++)f.push(b.records[h].data);g.send(a,f)},completeTask:function(a,b,c){var d=this,e=d.getReader().read(c);if(Ext.isEmpty(d.callbacks[b])){var f=Ext.StoreManager.lookup(d.getStoreId());if("undefined"==typeof f)return Ext.Error.raise("Unrecognized store: check if the storeId passed into configuration is right."),!1;f.loadData(e.records,!0),f.fireEvent("load",f)}else{{var g=d.callbacks[b],h=g.operation;h.records||c}delete d.callbacks[b],"function"==typeof h.setResultSet?h.setResultSet(e):h.resultSet=e,h.scope=g.scope,h.setCompleted(),h.setSuccessful(),g.callback.apply(g.scope,[h])}}});